
printf:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x16b>
  400248:	78 38                	js     400282 <_init-0x15e>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 18                	add    BYTE PTR [rax],bl
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 54 bc 86          	add    BYTE PTR [rsp+rdi*4-0x7a],dl
  400287:	69 e1 12 11 af ba    	imul   esp,ecx,0xbaaf1112
  40028d:	9c                   	pushf  
  40028e:	65 ac                	lods   al,BYTE PTR gs:[rsi]
  400290:	03 14 48             	add    edx,DWORD PTR [rax+rcx*2]
  400293:	38                   	.byte 0x38
  400294:	8a                   	.byte 0x8a
  400295:	8b                   	.byte 0x8b
  400296:	15                   	.byte 0x15
  400297:	ff                   	.byte 0xff

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	10 00                	adc    BYTE PTR [rax],al
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	22 00                	and    al,BYTE PTR [rax]
  400302:	00 00                	add    BYTE PTR [rax],al
  400304:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40031c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  40031e:	73 6f                	jae    40038f <_init-0x51>
  400320:	2e 36 00 70 75       	cs add BYTE PTR cs:ss:[rax+0x75],dh
  400325:	74 73                	je     40039a <_init-0x46>
  400327:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  40032a:	6c                   	ins    BYTE PTR es:[rdi],dx
  40032b:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400332:	72 74                	jb     4003a8 <_init-0x38>
  400334:	5f                   	pop    rdi
  400335:	6d                   	ins    DWORD PTR es:[rdi],dx
  400336:	61                   	(bad)  
  400337:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  40033e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40033f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400340:	5f                   	pop    rdi
  400341:	73 74                	jae    4003b7 <_init-0x29>
  400343:	61                   	(bad)  
  400344:	72 74                	jb     4003ba <_init-0x26>
  400346:	5f                   	pop    rdi
  400347:	5f                   	pop    rdi
  400348:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40034b:	49                   	rex.WB
  40034c:	42                   	rex.X
  40034d:	43 5f                	rex.XB pop r15
  40034f:	32 2e                	xor    ch,BYTE PTR [rsi]
  400351:	32 2e                	xor    ch,BYTE PTR [rsi]
  400353:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400356 <.gnu.version>:
  400356:	00 00                	add    BYTE PTR [rax],al
  400358:	02 00                	add    al,BYTE PTR [rax]
  40035a:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    DWORD PTR [rax],eax
  400362:	01 00                	add    DWORD PTR [rax],eax
  400364:	01 00                	add    DWORD PTR [rax],eax
  400366:	00 00                	add    BYTE PTR [rax],al
  400368:	10 00                	adc    BYTE PTR [rax],al
  40036a:	00 00                	add    BYTE PTR [rax],al
  40036c:	00 00                	add    BYTE PTR [rax],al
  40036e:	00 00                	add    BYTE PTR [rax],al
  400370:	75 1a                	jne    40038c <_init-0x54>
  400372:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400378:	31 00                	xor    DWORD PTR [rax],eax
  40037a:	00 00                	add    BYTE PTR [rax],al
  40037c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	f8                   	clc    
  400381:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  400384:	00 00                	add    BYTE PTR [rax],al
  400386:	00 00                	add    BYTE PTR [rax],al
  400388:	06                   	(bad)  
  400389:	00 00                	add    BYTE PTR [rax],al
  40038b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .rela.plt:

0000000000400398 <.rela.plt>:
  400398:	18 10                	sbb    BYTE PTR [rax],dl
  40039a:	60                   	(bad)  
  40039b:	00 00                	add    BYTE PTR [rax],al
  40039d:	00 00                	add    BYTE PTR [rax],al
  40039f:	00 07                	add    BYTE PTR [rdi],al
  4003a1:	00 00                	add    BYTE PTR [rax],al
  4003a3:	00 01                	add    BYTE PTR [rcx],al
	...
  4003ad:	00 00                	add    BYTE PTR [rax],al
  4003af:	00 20                	add    BYTE PTR [rax],ah
  4003b1:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003b4:	00 00                	add    BYTE PTR [rax],al
  4003b6:	00 00                	add    BYTE PTR [rax],al
  4003b8:	07                   	(bad)  
  4003b9:	00 00                	add    BYTE PTR [rax],al
  4003bb:	00 02                	add    BYTE PTR [rdx],al
	...
  4003c5:	00 00                	add    BYTE PTR [rax],al
  4003c7:	00 28                	add    BYTE PTR [rax],ch
  4003c9:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003cc:	00 00                	add    BYTE PTR [rax],al
  4003ce:	00 00                	add    BYTE PTR [rax],al
  4003d0:	07                   	(bad)  
  4003d1:	00 00                	add    BYTE PTR [rax],al
  4003d3:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .init:

00000000004003e0 <_init>:
  4003e0:	48 83 ec 08          	sub    rsp,0x8
  4003e4:	48 8b 05 0d 0c 20 00 	mov    rax,QWORD PTR [rip+0x200c0d]        # 600ff8 <_DYNAMIC+0x1d0>
  4003eb:	48 85 c0             	test   rax,rax
  4003ee:	74 05                	je     4003f5 <_init+0x15>
  4003f0:	e8 3b 00 00 00       	call   400430 <__gmon_start__@plt>
  4003f5:	48 83 c4 08          	add    rsp,0x8
  4003f9:	c3                   	ret    

Disassembly of section .plt:

0000000000400400 <puts@plt-0x10>:
  400400:	ff 35 02 0c 20 00    	push   QWORD PTR [rip+0x200c02]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400406:	ff 25 04 0c 20 00    	jmp    QWORD PTR [rip+0x200c04]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40040c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400410 <puts@plt>:
  400410:	ff 25 02 0c 20 00    	jmp    QWORD PTR [rip+0x200c02]        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400416:	68 00 00 00 00       	push   0x0
  40041b:	e9 e0 ff ff ff       	jmp    400400 <_init+0x20>

0000000000400420 <__libc_start_main@plt>:
  400420:	ff 25 fa 0b 20 00    	jmp    QWORD PTR [rip+0x200bfa]        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400426:	68 01 00 00 00       	push   0x1
  40042b:	e9 d0 ff ff ff       	jmp    400400 <_init+0x20>

0000000000400430 <__gmon_start__@plt>:
  400430:	ff 25 f2 0b 20 00    	jmp    QWORD PTR [rip+0x200bf2]        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400436:	68 02 00 00 00       	push   0x2
  40043b:	e9 c0 ff ff ff       	jmp    400400 <_init+0x20>

Disassembly of section .text:

0000000000400440 <_start>:
  400440:	31 ed                	xor    ebp,ebp
  400442:	49 89 d1             	mov    r9,rdx
  400445:	5e                   	pop    rsi
  400446:	48 89 e2             	mov    rdx,rsp
  400449:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40044d:	50                   	push   rax
  40044e:	54                   	push   rsp
  40044f:	49 c7 c0 c0 05 40 00 	mov    r8,0x4005c0
  400456:	48 c7 c1 50 05 40 00 	mov    rcx,0x400550
  40045d:	48 c7 c7 2d 05 40 00 	mov    rdi,0x40052d
  400464:	e8 b7 ff ff ff       	call   400420 <__libc_start_main@plt>
  400469:	f4                   	hlt    
  40046a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400470 <deregister_tm_clones>:
  400470:	b8 47 10 60 00       	mov    eax,0x601047
  400475:	55                   	push   rbp
  400476:	48 2d 40 10 60 00    	sub    rax,0x601040
  40047c:	48 83 f8 0e          	cmp    rax,0xe
  400480:	48 89 e5             	mov    rbp,rsp
  400483:	77 02                	ja     400487 <deregister_tm_clones+0x17>
  400485:	5d                   	pop    rbp
  400486:	c3                   	ret    
  400487:	b8 00 00 00 00       	mov    eax,0x0
  40048c:	48 85 c0             	test   rax,rax
  40048f:	74 f4                	je     400485 <deregister_tm_clones+0x15>
  400491:	5d                   	pop    rbp
  400492:	bf 40 10 60 00       	mov    edi,0x601040
  400497:	ff e0                	jmp    rax
  400499:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000004004a0 <register_tm_clones>:
  4004a0:	b8 40 10 60 00       	mov    eax,0x601040
  4004a5:	55                   	push   rbp
  4004a6:	48 2d 40 10 60 00    	sub    rax,0x601040
  4004ac:	48 c1 f8 03          	sar    rax,0x3
  4004b0:	48 89 e5             	mov    rbp,rsp
  4004b3:	48 89 c2             	mov    rdx,rax
  4004b6:	48 c1 ea 3f          	shr    rdx,0x3f
  4004ba:	48 01 d0             	add    rax,rdx
  4004bd:	48 d1 f8             	sar    rax,1
  4004c0:	75 02                	jne    4004c4 <register_tm_clones+0x24>
  4004c2:	5d                   	pop    rbp
  4004c3:	c3                   	ret    
  4004c4:	ba 00 00 00 00       	mov    edx,0x0
  4004c9:	48 85 d2             	test   rdx,rdx
  4004cc:	74 f4                	je     4004c2 <register_tm_clones+0x22>
  4004ce:	5d                   	pop    rbp
  4004cf:	48 89 c6             	mov    rsi,rax
  4004d2:	bf 40 10 60 00       	mov    edi,0x601040
  4004d7:	ff e2                	jmp    rdx
  4004d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000004004e0 <__do_global_dtors_aux>:
  4004e0:	80 3d 59 0b 20 00 00 	cmp    BYTE PTR [rip+0x200b59],0x0        # 601040 <__TMC_END__>
  4004e7:	75 11                	jne    4004fa <__do_global_dtors_aux+0x1a>
  4004e9:	55                   	push   rbp
  4004ea:	48 89 e5             	mov    rbp,rsp
  4004ed:	e8 7e ff ff ff       	call   400470 <deregister_tm_clones>
  4004f2:	5d                   	pop    rbp
  4004f3:	c6 05 46 0b 20 00 01 	mov    BYTE PTR [rip+0x200b46],0x1        # 601040 <__TMC_END__>
  4004fa:	f3 c3                	repz ret 
  4004fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400500 <frame_dummy>:
  400500:	48 83 3d 18 09 20 00 	cmp    QWORD PTR [rip+0x200918],0x0        # 600e20 <__JCR_END__>
  400507:	00 
  400508:	74 1e                	je     400528 <frame_dummy+0x28>
  40050a:	b8 00 00 00 00       	mov    eax,0x0
  40050f:	48 85 c0             	test   rax,rax
  400512:	74 14                	je     400528 <frame_dummy+0x28>
  400514:	55                   	push   rbp
  400515:	bf 20 0e 60 00       	mov    edi,0x600e20
  40051a:	48 89 e5             	mov    rbp,rsp
  40051d:	ff d0                	call   rax
  40051f:	5d                   	pop    rbp
  400520:	e9 7b ff ff ff       	jmp    4004a0 <register_tm_clones>
  400525:	0f 1f 00             	nop    DWORD PTR [rax]
  400528:	e9 73 ff ff ff       	jmp    4004a0 <register_tm_clones>

000000000040052d <main>:
  40052d:	55                   	push   rbp
  40052e:	48 89 e5             	mov    rbp,rsp
  400531:	bf d4 05 40 00       	mov    edi,0x4005d4
  400536:	e8 d5 fe ff ff       	call   400410 <puts@plt>
  40053b:	b8 01 00 00 00       	mov    eax,0x1
  400540:	5d                   	pop    rbp
  400541:	c3                   	ret    
  400542:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400549:	00 00 00 
  40054c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400550 <__libc_csu_init>:
  400550:	41 57                	push   r15
  400552:	41 89 ff             	mov    r15d,edi
  400555:	41 56                	push   r14
  400557:	49 89 f6             	mov    r14,rsi
  40055a:	41 55                	push   r13
  40055c:	49 89 d5             	mov    r13,rdx
  40055f:	41 54                	push   r12
  400561:	4c 8d 25 a8 08 20 00 	lea    r12,[rip+0x2008a8]        # 600e10 <__frame_dummy_init_array_entry>
  400568:	55                   	push   rbp
  400569:	48 8d 2d a8 08 20 00 	lea    rbp,[rip+0x2008a8]        # 600e18 <__init_array_end>
  400570:	53                   	push   rbx
  400571:	4c 29 e5             	sub    rbp,r12
  400574:	31 db                	xor    ebx,ebx
  400576:	48 c1 fd 03          	sar    rbp,0x3
  40057a:	48 83 ec 08          	sub    rsp,0x8
  40057e:	e8 5d fe ff ff       	call   4003e0 <_init>
  400583:	48 85 ed             	test   rbp,rbp
  400586:	74 1e                	je     4005a6 <__libc_csu_init+0x56>
  400588:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40058f:	00 
  400590:	4c 89 ea             	mov    rdx,r13
  400593:	4c 89 f6             	mov    rsi,r14
  400596:	44 89 ff             	mov    edi,r15d
  400599:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40059d:	48 83 c3 01          	add    rbx,0x1
  4005a1:	48 39 eb             	cmp    rbx,rbp
  4005a4:	75 ea                	jne    400590 <__libc_csu_init+0x40>
  4005a6:	48 83 c4 08          	add    rsp,0x8
  4005aa:	5b                   	pop    rbx
  4005ab:	5d                   	pop    rbp
  4005ac:	41 5c                	pop    r12
  4005ae:	41 5d                	pop    r13
  4005b0:	41 5e                	pop    r14
  4005b2:	41 5f                	pop    r15
  4005b4:	c3                   	ret    
  4005b5:	66 66 2e 0f 1f 84 00 	data32 nop WORD PTR cs:[rax+rax*1+0x0]
  4005bc:	00 00 00 00 

00000000004005c0 <__libc_csu_fini>:
  4005c0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000004005c4 <_fini>:
  4005c4:	48 83 ec 08          	sub    rsp,0x8
  4005c8:	48 83 c4 08          	add    rsp,0x8
  4005cc:	c3                   	ret    

Disassembly of section .rodata:

00000000004005d0 <_IO_stdin_used>:
  4005d0:	01 00                	add    DWORD PTR [rax],eax
  4005d2:	02 00                	add    al,BYTE PTR [rax]
  4005d4:	48                   	rex.W
  4005d5:	65                   	gs
  4005d6:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005d7:	6c                   	ins    BYTE PTR es:[rdi],dx
  4005d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005d9:	2c 20                	sub    al,0x20
  4005db:	57                   	push   rdi
  4005dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4005dd:	72 6c                	jb     40064b <_IO_stdin_used+0x7b>
  4005df:	64                   	fs
  4005e0:	2e                   	cs
	...

Disassembly of section .eh_frame_hdr:

00000000004005e4 <.eh_frame_hdr>:
  4005e4:	01 1b                	add    DWORD PTR [rbx],ebx
  4005e6:	03 3b                	add    edi,DWORD PTR [rbx]
  4005e8:	30 00                	xor    BYTE PTR [rax],al
  4005ea:	00 00                	add    BYTE PTR [rax],al
  4005ec:	05 00 00 00 1c       	add    eax,0x1c000000
  4005f1:	fe                   	(bad)  
  4005f2:	ff                   	(bad)  
  4005f3:	ff                   	(bad)  
  4005f4:	7c 00                	jl     4005f6 <_IO_stdin_used+0x26>
  4005f6:	00 00                	add    BYTE PTR [rax],al
  4005f8:	5c                   	pop    rsp
  4005f9:	fe                   	(bad)  
  4005fa:	ff                   	(bad)  
  4005fb:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
  4005ff:	00 49 ff             	add    BYTE PTR [rcx-0x1],cl
  400602:	ff                   	(bad)  
  400603:	ff a4 00 00 00 6c ff 	jmp    QWORD PTR [rax+rax*1-0x940000]
  40060a:	ff                   	(bad)  
  40060b:	ff c4                	inc    esp
  40060d:	00 00                	add    BYTE PTR [rax],al
  40060f:	00 dc                	add    ah,bl
  400611:	ff                   	(bad)  
  400612:	ff                   	(bad)  
  400613:	ff 0c 01             	dec    DWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

0000000000400618 <__FRAME_END__-0xf0>:
  400618:	14 00                	adc    al,0x0
  40061a:	00 00                	add    BYTE PTR [rax],al
  40061c:	00 00                	add    BYTE PTR [rax],al
  40061e:	00 00                	add    BYTE PTR [rax],al
  400620:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400623:	00 01                	add    BYTE PTR [rcx],al
  400625:	78 10                	js     400637 <_IO_stdin_used+0x67>
  400627:	01 1b                	add    DWORD PTR [rbx],ebx
  400629:	0c 07                	or     al,0x7
  40062b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400631:	00 00                	add    BYTE PTR [rax],al
  400633:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400636:	00 00                	add    BYTE PTR [rax],al
  400638:	08 fe                	or     dh,bh
  40063a:	ff                   	(bad)  
  40063b:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  400645:	00 00                	add    BYTE PTR [rax],al
  400647:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40064a:	00 00                	add    BYTE PTR [rax],al
  40064c:	00 00                	add    BYTE PTR [rax],al
  40064e:	00 00                	add    BYTE PTR [rax],al
  400650:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400653:	00 01                	add    BYTE PTR [rcx],al
  400655:	78 10                	js     400667 <_IO_stdin_used+0x97>
  400657:	01 1b                	add    DWORD PTR [rbx],ebx
  400659:	0c 07                	or     al,0x7
  40065b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400661:	00 00                	add    BYTE PTR [rax],al
  400663:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400666:	00 00                	add    BYTE PTR [rax],al
  400668:	98                   	cwde   
  400669:	fd                   	std    
  40066a:	ff                   	(bad)  
  40066b:	ff 40 00             	inc    DWORD PTR [rax+0x0]
  40066e:	00 00                	add    BYTE PTR [rax],al
  400670:	00 0e                	add    BYTE PTR [rsi],cl
  400672:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400675:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400678:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40067b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40067e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400680:	2a 33                	sub    dh,BYTE PTR [rbx]
  400682:	24 22                	and    al,0x22
  400684:	00 00                	add    BYTE PTR [rax],al
  400686:	00 00                	add    BYTE PTR [rax],al
  400688:	1c 00                	sbb    al,0x0
  40068a:	00 00                	add    BYTE PTR [rax],al
  40068c:	44 00 00             	add    BYTE PTR [rax],r8b
  40068f:	00 9d fe ff ff 15    	add    BYTE PTR [rbp+0x15fffffe],bl
  400695:	00 00                	add    BYTE PTR [rax],al
  400697:	00 00                	add    BYTE PTR [rax],al
  400699:	41 0e                	rex.B (bad) 
  40069b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4006a1:	50                   	push   rax
  4006a2:	0c 07                	or     al,0x7
  4006a4:	08 00                	or     BYTE PTR [rax],al
  4006a6:	00 00                	add    BYTE PTR [rax],al
  4006a8:	44 00 00             	add    BYTE PTR [rax],r8b
  4006ab:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
  4006af:	00 a0 fe ff ff 65    	add    BYTE PTR [rax+0x65fffffe],ah
  4006b5:	00 00                	add    BYTE PTR [rax],al
  4006b7:	00 00                	add    BYTE PTR [rax],al
  4006b9:	42 0e                	rex.X (bad) 
  4006bb:	10 8f 02 45 0e 18    	adc    BYTE PTR [rdi+0x180e4502],cl
  4006c1:	8e 03                	mov    es,WORD PTR [rbx]
  4006c3:	45 0e                	rex.RB (bad) 
  4006c5:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
  4006cb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86701519 <_end+0xffffffff861004d1>
  4006d1:	06                   	(bad)  
  4006d2:	48 0e                	rex.W (bad) 
  4006d4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  4006da:	6c                   	ins    BYTE PTR es:[rdi],dx
  4006db:	0e                   	(bad)  
  4006dc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  4006df:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  4006e2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  4006e5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  4006e8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  4006eb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  4006ee:	08 00                	or     BYTE PTR [rax],al
  4006f0:	14 00                	adc    al,0x0
  4006f2:	00 00                	add    BYTE PTR [rax],al
  4006f4:	ac                   	lods   al,BYTE PTR ds:[rsi]
  4006f5:	00 00                	add    BYTE PTR [rax],al
  4006f7:	00 c8                	add    al,cl
  4006f9:	fe                   	(bad)  
  4006fa:	ff                   	(bad)  
  4006fb:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000400708 <__FRAME_END__>:
  400708:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	00 05 40 00 00 00    	add    BYTE PTR [rip+0x40],al        # 600e56 <_DYNAMIC+0x2e>
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	e0 04                	loopne 600e1e <__do_global_dtors_aux_fini_array_entry+0x6>
  600e1a:	40 00 00             	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	e0 03                	loopne 600e45 <_DYNAMIC+0x1d>
  600e42:	40 00 00             	add    BYTE PTR [rax],al
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 c4                	add    ah,al
  600e51:	05 40 00 00 00       	add    eax,0x40
  600e56:	00 00                	add    BYTE PTR [rax],al
  600e58:	19 00                	sbb    DWORD PTR [rax],eax
  600e5a:	00 00                	add    BYTE PTR [rax],al
  600e5c:	00 00                	add    BYTE PTR [rax],al
  600e5e:	00 00                	add    BYTE PTR [rax],al
  600e60:	10 0e                	adc    BYTE PTR [rsi],cl
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 18                	add    BYTE PTR [rax],bl
  600eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eb4:	00 00                	add    BYTE PTR [rax],al
  600eb6:	00 00                	add    BYTE PTR [rax],al
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 600ed5 <_DYNAMIC+0xad>
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 0b                	add    BYTE PTR [rbx],cl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 18                	add    BYTE PTR [rax],bl
  600ee1:	00 00                	add    BYTE PTR [rax],al
  600ee3:	00 00                	add    BYTE PTR [rax],al
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	48 00 00             	rex.W add BYTE PTR [rax],al
  600f13:	00 00                	add    BYTE PTR [rax],al
  600f15:	00 00                	add    BYTE PTR [rax],al
  600f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 98 03 40 00 00    	add    BYTE PTR [rax+0x4003],bl
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 80 03 40 00 00    	add    BYTE PTR [rax+0x4003],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  600f72:	40 00 00             	add    BYTE PTR [rax],al
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 56 03             	add    BYTE PTR [rsi+0x3],dl
  600f92:	40 00 00             	add    BYTE PTR [rax],al
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 16                	add    BYTE PTR [rsi],dl
  601019:	04 40                	add    al,0x40
  60101b:	00 00                	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 26                	add    BYTE PTR [rsi],ah
  601021:	04 40                	add    al,0x40
  601023:	00 00                	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 36                	add    BYTE PTR [rsi],dh
  601029:	04 40                	add    al,0x40
  60102b:	00 00                	add    BYTE PTR [rax],al
  60102d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601030 <__data_start>:
	...

0000000000601038 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601040 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400368>
   a:	74 75                	je     81 <_init-0x40035f>
   c:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
   f:	38 2e                	cmp    BYTE PTR [rsi],ch
  11:	34 2d                	xor    al,0x2d
  13:	32 75 62             	xor    dh,BYTE PTR [rbp+0x62]
  16:	75 6e                	jne    86 <_init-0x40035a>
  18:	74 75                	je     8f <_init-0x400351>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	34 2e                	xor    al,0x2e
  1f:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  22:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  25:	38 2e                	cmp    BYTE PTR [rsi],ch
  27:	34 00                	xor    al,0x0
  29:	47                   	rex.RXB
  2a:	43                   	rex.XB
  2b:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
  2e:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
  31:	75 6e                	jne    a1 <_init-0x40033f>
  33:	74 75                	je     aa <_init-0x400336>
  35:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  38:	38 2e                	cmp    BYTE PTR [rsi],ch
  3a:	32 2d 31 39 75 62    	xor    ch,BYTE PTR [rip+0x62753931]        # 62753971 <_end+0x62152929>
  40:	75 6e                	jne    b0 <_init-0x400330>
  42:	74 75                	je     b9 <_init-0x400327>
  44:	31 29                	xor    DWORD PTR [rcx],ebp
  46:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  49:	38 2e                	cmp    BYTE PTR [rsi],ch
  4b:	32 00                	xor    al,BYTE PTR [rax]
